apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        config {
            storeFile file("debug.keystore")
        }
    }
    compileSdkVersion 28

    defaultConfig {
        applicationId "org.lulzm.waft"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "stage", "mode"
    productFlavors {
        dev {
            dimension "stage"
            versionCode 100
            //noinspection DevModeObsolete
            minSdkVersion 21
            aaptOptions.cruncherEnabled = false
            resConfigs "ko", "xxhdpi"
        }
        prd {
            dimension "stage"
            versionCode new Date().format('yyMMddHHmm').toInteger()
        }
        free {
            dimension "mode"
        }
        paid {
            dimension "mode"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk false
        }
    }
    android.variantFilter { variant ->
        def buildName = variant.buildType.name;
        def flavorName = variant.getFlavors().get(0).name;
        if (flavorName == 'dev' && buildName == 'release'
                || flavorName == 'prd' && buildName == 'debug') {
            variant.setIgnore(true);
        }
        splits.abi.enable = (flavorName == 'prd');
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // jetpack
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    // Debug
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-beta01'
    // 설정관련
    implementation 'com.android.support:preference-v7:28.0.0'
    // firebase
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-database:17.0.0'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'com.google.firebase:firebase-storage:17.0.0'
    // FirebaseUI for Firebase Realtime Database
    implementation 'com.firebaseui:firebase-ui-database:3.3.1'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    // Google Services - MLkit
    implementation 'com.google.android.gms:play-services-vision:17.0.2'
    // Google API
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-places:16.1.0'
    implementation 'com.google.android.libraries.places:places:1.1.0'
    implementation 'noman.placesapi:placesAPI:1.1.3'
    implementation 'com.akexorcist:googledirectionlibrary:1.1.1'
    // Material design
    implementation 'com.google.android.material:material:1.0.0-alpha1'
    // 리사이클러뷰, 카드뷰
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha05'
    implementation 'androidx.cardview:cardview:1.0.0'
    // Country-picker
    implementation 'com.hbb20:ccp:2.2.6'
    // PercentLayout
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    // circle image view library
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    // cropping image library
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    // for stylist toast
    implementation 'com.github.TheHasnatBD:SweetToast:1.0.2'
    // image Compressor library
    implementation 'id.zelory:compressor:2.1.0'
    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    // HTTP & HTTP/2 client for Android
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    // lottie
    implementation 'com.airbnb.android:lottie:2.8.0'
    // glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    // QR code
    implementation 'com.google.zxing:core:3.3.2'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'info.androidhive:barcode-reader:1.1.5'
    implementation 'com.google.android.gms:play-services-vision:17.0.2'
    // remember text
    implementation 'cn.zhaiyifan:rememberedittext:0.9.0'
    // for currency_chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
}


apply plugin: 'com.google.gms.google-services'
